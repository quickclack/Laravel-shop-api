version: '3.1'
services:
  webserver:
    image: 'nginx:alpine'
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 8080:80
    depends_on:
      - app
    container_name: shop_nginx

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    volumes:
      - ./:/var/www
    container_name: shop_app

  db:
    image: mysql:8.0
    restart: always
    volumes:
      - ./docker/mysql/tmp/db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: shop
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    container_name: shop_db

#  kafka_ui:
#    image: provectuslabs/kafka-ui
#    container_name: kafka_ui
#    ports:
#        - 8090:8080
#    restart: always
#    environment:
#        - KAFKA_CLUSTERS_0_NAME=local
#        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092,kafka2:29093
#        - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
#    links:
#        - kafka
#        - zookeeper
#
#  zookeeper:
#    container_name: zookeeper
#    image: confluentinc/cp-zookeeper:5.2.4
#    hostname: zookeeper
#    ports:
#        - "2181:2181"
#    environment:
#        ZOOKEEPER_CLIENT_PORT: 2181
#    volumes:
#        - ./docker/kafka/zookeeper/data:/data
#        - ./docker/kafka/zookeeper/datalog:/datalog
#
#  kafka:
#    container_name: kafka
#    image: confluentinc/cp-kafka:5.3.1
#    hostname: kafka
#    ports:
#        - "9091:9091"
#    environment:
#        KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
#        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#        KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#        KAFKA_BROKER_ID: 1
#        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
#        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "False"
#    volumes:
#        - ./docker/kafka/kafka/data:/var/lib/kafka/data
#    depends_on:
#        - zookeeper

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - '8025:8025'
    container_name: shop_mailhog
